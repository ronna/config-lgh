{
  "locales": [
    {
      "code": "en",
      "name": "English"
    },
    {
      "code": "es",
      "name": "Español (Spanish)"
    },
    {
      "code": "fr",
      "name": "Français (French)"
    },
    {
      "code": "ne",
      "name": "नेपाली (Nepali)"
    },
    {
      "code": "sw",
      "name": "Kiswahili (Swahili)"
    }
  ],
  "locale": "en",
  "locale_outgoing": "en",
  "date_format": "D MMM, YYYY",
  "reported_date_format": "DD-MMM-YYYY HH:mm:ss",
  "forms_only_mode": false,
  "place_hierarchy_types": [
    "district_hospital",
    "health_center"
  ],
  "default_responses": {
    "start_date": ""
  },
  "district_admins_access_unallocated_messages": false,
  "public_access": false,
  "default_country_code": 1,
  "gateway_number": "+15146906436",
  "kujua-reporting": [
    {
      "code": "VPD",
      "reporting_freq": "weekly"
    }
  ],
  "dhisDataSets": [
    {
      "guid": "VMuFODsyWaO",
      "label": "MoH Monthly Integration"
    }
  ],
  "schedule_morning_hours": 0,
  "schedule_morning_minutes": 0,
  "schedule_evening_hours": 23,
  "schedule_evening_minutes": 0,
  "synthetic_date": "",
  "contact_display_short": "clinic.name",
  "roles": {
    "data_entry": {
      "name": "usertype.data-entry"
    },
    "analytics": {
      "name": "usertype.analytics"
    },
    "gateway": {
      "name": "usertype.gateway"
    },
    "program_officer": {
      "name": "usertype.program-officer"
    },
    "crfo": {
      "name": "usertype.crfo"
    },
    "chw_supervisor": {
      "name": "usertype.chw-supervisor",
      "offline": true
    },
    "chw": {
      "name": "usertype.chw",
      "offline": true
    },
    "covid_tracer": {
      "name": "usertype.covid_tracer",
      "offline": true
    },
    "covid_data_entry": {
      "name": "usertype.covid_data_entry",
      "offline": true
    }
  },
  "permissions": {
    "can_access_gateway_api": [
      "gateway"
    ],
    "can_bulk_delete_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_configure": [
      "program_officer",
      "crfo"
    ],
    "can_create_people": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_create_places": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_create_records": [
      "data_entry",
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_create_users": [
      "program_officer"
    ],
    "can_delete_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_delete_messages": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_reports": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_delete_users": [
      "program_officer"
    ],
    "can_edit": [
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_edit_profile": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_edit_verification": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_export_all": [
      "program_officer",
      "crfo"
    ],
    "can_export_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_export_feedback": [
      "program_officer"
    ],
    "can_export_messages": [
      "analytics",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_log_out_on_android": [],
    "can_update_places": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_update_reports": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_update_users": [
      "program_officer"
    ],
    "can_export_dhis": [
      "national_admin",
      "crfo"
    ],
    "can_verify_reports": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_view_analytics": [
      "analytics",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_call_action": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_view_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_view_contacts_tab": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_view_last_visited_date": [],
    "can_view_message_action": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_view_messages": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_view_messages_tab": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_view_outgoing_messages": [
      "program_officer"
    ],
    "can_view_reports": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_view_reports_tab": [
      "program_officer",
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_view_tasks": [
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_view_tasks_tab": [
      "chw_supervisor",
      "chw",
      "covid_tracer",
      "covid_data_entry"
    ],
    "can_view_unallocated_data_records": [
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_users": [
      "program_officer"
    ],
    "can_write_wealth_quintiles": []
  },
  "changes_controller": {
    "reiterate_changes": true,
    "changes_limit": 100,
    "debounce_interval": 200
  },
  "uhc": {
    "contacts_default_sort": "",
    "visit_count": {
      "month_start_date": 1,
      "visit_count_goal": 0
    }
  },
  "death_reporting": {
    "mark_deceased_forms": [
      "death_report"
    ],
    "date_field": "fields.death_details.date_of_death",
    "undo_deceased_forms": [
      "undo_death_report"
    ]
  },
  "contact_types": [
    {
      "id": "district_hospital",
      "name_key": "contact.type.district_hospital",
      "group_key": "contact.type.district_hospital.plural",
      "create_key": "contact.type.district_hospital.new",
      "edit_key": "contact.type.place.edit",
      "icon": "medic-district-hospital",
      "create_form": "form:contact:district_hospital:create",
      "edit_form": "form:contact:district_hospital:edit"
    },
    {
      "id": "health_center",
      "name_key": "contact.type.health_center",
      "group_key": "contact.type.health_center.plural",
      "create_key": "contact.type.health_center.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "district_hospital"
      ],
      "icon": "medic-health-center",
      "create_form": "form:contact:health_center:create",
      "edit_form": "form:contact:health_center:edit"
    },
    {
      "id": "clinic",
      "name_key": "contact.type.clinic",
      "group_key": "contact.type.clinic.plural",
      "create_key": "contact.type.clinic.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "health_center"
      ],
      "icon": "medic-clinic",
      "create_form": "form:contact:clinic:create",
      "edit_form": "form:contact:clinic:edit",
      "count_visits": true
    },
    {
      "id": "person",
      "name_key": "contact.type.person",
      "group_key": "contact.type.person.plural",
      "create_key": "contact.type.person.new",
      "edit_key": "contact.type.person.edit",
      "primary_contact_key": "clinic.field.contact",
      "parents": [
        "district_hospital",
        "health_center",
        "clinic"
      ],
      "icon": "medic-person",
      "create_form": "form:contact:person:create",
      "edit_form": "form:contact:person:edit",
      "person": true
    }
  ],
  "setup_complete": true,
  "contact_summary": "var ContactSummary = {}; !function(e,t){if('object'==typeof exports&&'object'==typeof module)module.exports=t();else if('function'==typeof define&&define.amd)define([],t);else{var a=t();for(var n in a)('object'==typeof exports?exports:e)[n]=a[n]}}(ContactSummary,(function(){return function(e){var t={};function a(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,a),o.l=!0,o.exports}return a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&'object'==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,'default',{enumerable:!0,value:e}),2&t&&'string'!=typeof e)for(var o in e)a.d(n,o,function(t){return e[t]}.bind(null,o));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,'a',t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p='',a(a.s=0)}([function(e,t,a){var n=a(1),o=a(2);e.exports=o(n,contact,reports)},function(e,t){const a=contact,n=lineage,o=reports,i=(e,t)=>[...(t||'').split('.')].reduce((e,t)=>{if(void 0!==e)return e[t]},e),l=()=>'traveler'===i(a,'role'),r=function(e){return o&&o.some(t=>t.form===e)},c={isPassenger:l(),hasDeclarationForm:r('declaration'),hasLocatorForm:r('locator'),hasQuarantineForm:r('quarantine')},p=[{appliesToType:'person',label:'patient_id',value:a.patient_id,width:4},{appliesToType:'person',label:'contact.age',value:a.date_of_birth,width:4,filter:'age'},{appliesToType:'person',label:'contact.sex',value:'contact.sex.'+a.sex,translate:!0,width:4},{appliesToType:'person',label:'person.field.phone',value:a.phone,width:4},{appliesToType:'person',label:'person.field.alternate_phone',value:a.phone_alternate,width:4},{appliesToType:'person',appliesIf:l,label:'contact.nationality',value:'country.'+i(a,'traveler.nationality'),translate:!0,width:4},{appliesToType:'person',appliesIf:l,label:'contact.passport',value:i(a,'traveler.passport'),width:4},{appliesToType:'person',label:'contact.parent',value:n,filter:'lineage'},{appliesToType:'!person',label:'contact',value:a.contact&&a.contact.name,width:4},{appliesToType:'!person',label:'contact.phone',value:a.contact&&a.contact.phone,width:4},{appliesToType:'!person',label:'External ID',value:a.external_id,width:4},{appliesToType:'!person',appliesIf:function(){return a.parent&&n[0]},label:'contact.parent',value:n,filter:'lineage'},{appliesToType:'person',label:'contact.notes',value:a.notes,width:12},{appliesToType:'!person',label:'contact.notes',value:a.notes,width:12}],f=[{label:'contact.profile.referral',appliesToType:'person',appliesIf:function(){return l()&&!!u(o,'referral')},fields:function(){const e=[],t=u(o,'referral'),a=i(t,'fields.temp_infra_unit'),n=i(t,'fields.temp_clinical_unit'),l='celsius'===a?'°C':'fahrenheit'===a?'°F':'',r='celsius'===n?'°C':'fahrenheit'===n?'°F':'';return t&&e.push({label:'contact.profile.referral.temp_ir',value:i(t,'fields.temp_infra')+l,width:6},{label:'contact.profile.referral.temp_clinical',value:i(t,'fields.temp_clinical')+r,width:6},{label:'contact.profile.referral.referred_to',value:'contact.profile.referral.place.'+i(t,'fields.referred_to'),translate:!0,width:6},{label:'',icon:'icon-risk',width:6}),e}},{label:'contact.profile.quarantine.form',appliesToType:'person',appliesIf:l,fields:function(){const e=[],t=u(o,'quarantine');return t?e.push({label:'contact.profile.quarantine.airline',value:i(t,'fields.flight_info.airline'),width:4},{label:'contact.profile.quarantine.flight',value:i(t,'fields.flight_info.flight'),width:4},{label:'contact.profile.quarantine.arrival_date',value:i(t,'fields.flight_info.arrival_date'),filter:'simpleDate',width:4},{label:'contact.profile.quarantine.accomodation.stay',value:'contact.profile.quarantine.accomodation.stay.'+i(t,'fields.accomodation.staying_at'),translate:!0,width:4},{label:'contact.profile.quarantine.accomodation.province',value:i(t,'fields.accomodation.province'),width:4},{label:'contact.profile.quarantine.accomodation.district',value:i(t,'fields.accomodation.district'),width:4},{label:'contact.profile.quarantine.accomodation.municipality',value:i(t,'fields.accomodation.municipality'),width:4},{label:'contact.profile.quarantine.accomodation.ward',value:i(t,'fields.accomodation.ward'),width:4},{label:'contact.profile.quarantine.accomodation.house',value:i(t,'fields.accomodation.house'),width:4},{label:'contact.profile.quarantine.accomodation.landline',value:i(t,'fields.accomodation.landline'),width:4},{label:'contact.profile.quarantine.accomodation.mobile',value:i(t,'fields.accomodation.mobile'),width:4}):e.push({label:'contact.profile.quarantine.form.none'}),e}},{label:'contact.profile.declaration.form',appliesToType:'person',appliesIf:l,fields:function(){const e=[],t=u(o,'declaration');if(t){const a=s(i(t,'fields.contact_info')),n=s(i(t,'fields.health'));a&&a.length>0?(e.push({label:'risk.contact.found',width:12,icon:'icon-risk'}),a.forEach((function(t){e.push({value:'risk.contact.'+t,translate:!0,width:12})}))):e.push({label:'risk.contact.none'}),n&&n.length>0?(e.push({label:'risk.health.found',width:12,icon:'icon-risk'}),n.forEach((function(t){e.push({value:'risk.health.'+t,translate:!0,width:12})}))):e.push({label:'risk.health.none'})}else e.push({label:'contact.profile.declaration.form.none'});return e}},{label:'contact.profile.locator.form',appliesToType:'person',appliesIf:l,fields:function(){const e=[],t=u(o,'locator');return t?e.push({label:'contact.profile.locator.airline',value:i(t,'fields.flight_info.airline'),width:4},{label:'contact.profile.locator.flight',value:i(t,'fields.flight_info.flight'),width:4},{label:'contact.profile.locator.arrival_date',value:i(t,'fields.flight_info.arrival_date_updated')||i(t,'fields.flight_info.arrival_date'),filter:'simpleDate',width:4}):e.push({label:'contact.profile.locator.form.none'}),e}}];function s(e){if(!e)return!1;const t=[];return Object.keys(e).forEach((function(a){'true'===e[a]&&a.indexOf('_risk')<0&&t.push(a)})),t}function u(e,t){let a;return e&&e.forEach((function(e){(function(e){return!!(e.form&&e.fields&&e.reported_date)})(e)&&t.includes(e.form)&&(!a||e.reported_date>a.reported_date)&&(a=e)})),a}e.exports={context:c,cards:f,fields:p}},function(e,t){function a(e){return Array.isArray(e)?e:[e]}function n(e,t,a){if(e.appliesIf(a)){var n='function'==typeof e.fields?e.fields(a):e.fields.filter((function(e){switch(typeof e.appliesIf){case'undefined':return!0;case'function':return e.appliesIf(a);default:return e.appliesIf}})).map((function(e){var t={};return o(e,t,'label'),o(e,t,'value'),o(e,t,'translate'),o(e,t,'filter'),o(e,t,'width'),o(e,t,'icon'),e.context&&(t.context={},o(e.context,t.context,'count'),o(e.context,t.context,'total')),t}));return e.modifyContext&&e.modifyContext(t,a),{label:e.label,fields:n}}function o(e,t,n){switch(typeof e[n]){case'undefined':return;case'function':t[n]=e[n](a);break;default:t[n]=e[n]}}}e.exports=function(e,t,o){var i=e.fields||[],l=e.context||{},r=e.cards||[],c=t&&(t.contact_type||t.type),p={cards:[],fields:i.filter((function(e){var t=a(e.appliesToType),n=t.filter((function(e){return e&&'!'===e.charAt(0)}));if((t.includes(c)||n.length>0&&!n.includes('!'+c))&&(!e.appliesIf||e.appliesIf()))return delete e.appliesToType,delete e.appliesIf,!0}))};return r.forEach((function(e){var t,i,r,f,s=a(e.appliesToType);if(s.includes('report')&&s.length>1)throw new Error('You cannot set appliesToType to an array which includes the type \\'report\\' and another type.');if(s.includes('report'))for(t=0;t<o.length;++t)i=o[t],!(f=i)||f.errors&&f.errors.length||(r=n(e,l,i))&&p.cards.push(r);else{if(!s.includes(c))return;(r=n(e,l))&&p.cards.push(r)}})),p.context=l,p}}])})); return ContactSummary;",
  "tasks": {
    "rules": "define Target { _id: null, contact: null, deleted: null, type: null, pass: null, date: null, groupBy: null }\ndefine Contact { contact: null, reports: null, tasks: null }\ndefine Task { _id: null, deleted: null, doc: null, contact: null, icon: null, date: null, readyStart: null, readyEnd: null, title: null, fields: null, resolved: null, priority: null, priorityLabel: null, reports: null, actions: null }\nrule GenerateEvents {\n  when { c: Contact } then { !function(t){var e={};function o(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(t,'__esModule',{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&'object'==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,'default',{enumerable:!0,value:t}),2&e&&'string'!=typeof t)for(var r in t)o.d(n,r,function(e){return t[e]}.bind(null,r));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,'a',e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p='',o(o.s=1)}([function(t,e){t.exports=function(t){var e={};!function t(e,o){var n=Object.keys(e);for(var r in n){var a=n[r];switch(typeof e[a]){case'object':t(e[a],o);break;case'function':e[a]=e[a].bind(o)}}}(t,e),e.definition=function t(e){var o=Object.assign({},e),n=Object.keys(o);for(var r in n){var a=n[r];if(Array.isArray(o[a])){o[a]=o[a].slice(0);for(var i=0;i<o[a].length;++i)'object'==typeof o[a][i]&&(o[a][i]=t(o[a][i]))}else'object'==typeof o[a]&&(o[a]=t(o[a]))}return o}(t)}},function(t,e,o){var n=o(2),r=o(3),a=o(4);o(5)(r,c,Utils,Target,emit),a(n,c,Utils,Task,emit),emit('_complete',{_id:!0})},function(t,e){t.exports=[{name:'covid-rdt-followup',icon:'icon-healthcare',title:'task.covid_followup.title',appliesTo:'contacts',appliesToType:['person'],appliesIf:function(t){return this.mostRecentRdt=Utils.getMostRecentReport(t.reports,'covid_rdt'),this.mostRecentRdt&&'positive'===Utils.getField(this.mostRecentRdt,'test_result')},resolvedIf:function(t,e,o){const n=Utils.addDate(o.dueDate(t,e),-o.start),r=Utils.addDate(o.dueDate(t,e),o.end+1),a=t.reports.filter(t=>t.reported_date>=this.mostRecentRdt.reported_date);return Utils.isFormSubmittedInWindow(a,'covid_rdt_followup',n,r)},events:[{start:1,end:3,dueDate:function(){return Utils.addDate(new Date(this.mostRecentRdt.reported_date),1)}}],actions:[{type:'contacts',form:'covid_rdt_followup',label:'task.covid_followup.title'}]},{name:'cha-signal-verification',icon:'icon-healthcare',title:'task.cha_verification.title',appliesTo:'contacts',appliesToType:void 0,appliesIf:function(t){const e=user.parent&&('health_center'===user.parent.type||'district_hospital'===user.parent.type);return this.mostRecent8=Utils.getMostRecentReport(t.reports,'8'),e&&this.mostRecent8},resolvedIf:function(t,e,o){const n=Utils.addDate(o.dueDate(t,e),-o.start),r=Utils.addDate(o.dueDate(t,e),o.end+1),a=t.reports.filter(t=>t.reported_date>=this.mostRecent8.reported_date);return Utils.isFormSubmittedInWindow(a,'cha_signal_verification',n,r)},events:[{start:1,end:3,dueDate:function(){return Utils.addDate(new Date(this.mostRecent8.reported_date),1)}}],actions:[{type:'report',form:'cha_signal_verification',label:'Cha verification',modifyContent:function(t,e){console.log(JSON.stringify(e));const o=this.mostRecent8;t.id_signal=o.patient_id,e.contact.name='Signal ID:  '+e.contact.patient_id}}]},{name:'scdsc-investigation',icon:'icon-healthcare',title:'task.scdsc_investigation.title',appliesTo:'contacts',appliesToType:void 0,appliesIf:function(t){const e=user.parent&&'district_hospital'===user.parent.type;return this.mostRecentChaVerification=Utils.getMostRecentReport(t.reports,'cha_signal_verification'),e&&this.mostRecentChaVerification},resolvedIf:function(t,e,o){const n=Utils.addDate(o.dueDate(t,e),-o.start),r=Utils.addDate(o.dueDate(t,e),o.end+1),a=t.reports.filter(t=>t.reported_date>=this.mostRecentChaVerification.reported_date);return Utils.isFormSubmittedInWindow(a,'scdsc_investigation',n,r)},events:[{start:1,end:3,dueDate:function(){return Utils.addDate(new Date(this.mostRecentChaVerification.reported_date),1)}}],actions:[{type:'report',form:'scdsc_investigation',label:'Scdsc investigation',modifyContent:function(t,e){const o=this.mostRecentChaVerification;t.id_signal=o.fields.patient_id,e.contact.name='Signal ID:  '+e.contact.patient_id}}]},{name:'trace_follow_up',icon:'icon-healthcare',title:'task.trace_follow_up.title',appliesTo:'contacts',appliesToType:[' '],appliesIf:function(t){return!!t.contact.covid_patient&&('covid_tracer'===user.role||'chw_supervisor'===user.role)},resolvedIf:function(t){return this.mostRecentTraceFollowUp=Utils.getMostRecentReport(t.reports,'covid_trace_follow_up'),this.mostRecentTraceFollowUp&&['contacted','stop'].includes(Utils.getField(this.mostRecentTraceFollowUp,'trace.result'))},events:[{days:0,start:0,end:30}],actions:[{type:'report',form:'covid_trace_follow_up',label:'task.trace_follow_up.title'}]},{name:'symptoms_check',icon:'icon-healthcare',title:'task.symptoms_check.title',appliesTo:'contacts',appliesToType:['person'],appliesIf:function(t){return this.mostRecentQuarantine_follow_up=Utils.getMostRecentReport(t.reports,'QUARANTINE_FOLLOW_UP'),!!this.mostRecentQuarantine_follow_up&&(!0===Utils.getField(this.mostRecentQuarantine_follow_up,'symptoms_check')||'1'===Utils.getField(this.mostRecentQuarantine_follow_up,'symptoms_check'))},resolvedIf:function(t){return this.mostRecentSymCheck=Utils.getMostRecentReport(t.reports,'symptoms_check'),!!this.mostRecentSymCheck&&'yes'===Utils.getField(this.mostRecentSymCheck,'symptom_check.symptom')},events:[{days:0,start:0,end:3}],actions:[{type:'report',form:'symptoms_check',label:'task.symptoms_check.title'}]},{name:'symptomatic_contact_follow_up',icon:'icon-healthcare',title:'task.symptomatic_contact_follow_up.title',appliesTo:'contacts',appliesToType:void 0,appliesIf:function(t){return this.mostRecentSymptomsCheck=Utils.getMostRecentReport(t.reports,'symptoms_check'),!!this.mostRecentSymptomsCheck&&'yes'===Utils.getField(this.mostRecentSymptomsCheck,'symptom_check.symptom')&&'data_entry'===user.role},resolvedIf:function(t,e,o){const n=Utils.addDate(o.dueDate(t,e),-o.start),r=Utils.addDate(o.dueDate(t,e),o.end+1),a=t.reports.filter(t=>t.reported_date>=this.mostRecentSymptomsCheck.reported_date);return Utils.isFormSubmittedInWindow(a,'symptomatic_contact_follow_up',n,r)},events:[{start:1,end:3,dueDate:function(){return Utils.addDate(new Date(this.mostRecentSymptomsCheck.reported_date),1)}}],actions:[{type:'report',form:'symptomatic_contact_follow_up',label:'task.symptomatic_contact_follow_up.title'}]}]},function(t,e){const o=(t,e)=>[...(e||'').split('.')].reduce((t,e)=>{if(void 0!==t)return t[e]},t),n=t=>'traveler'===o(t.contact,'role'),r=t=>{const e=new Date;return t.getDate()===e.getDate()&&t.getMonth()===e.getMonth()&&t.getFullYear()===e.getFullYear()},a=t=>'referral'===t.form;t.exports=[{id:'travellers-registered-this-month',type:'count',icon:'icon-person',goal:0,translation_key:'targets.travellers.count',subtitle_translation_key:'targets.this_month.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:n,date:'reported'},{id:'travellers-registered-today',type:'count',icon:'icon-person',goal:0,translation_key:'targets.travellers.count',subtitle_translation_key:'targets.today.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:function(t){return n(t)&&r(new Date(t.contact.reported_date))},date:'reported'},{id:'reports-with-risk-this-month',type:'count',icon:'icon-risk',goal:0,translation_key:'targets.risk.count',subtitle_translation_key:'targets.this_month.subtitle',context:'user.role === \"inputter\"',appliesTo:'reports',appliesToType:['declaration'],idType:'contact',appliesIf:function(t,e){return'true'===o(e,'fields.r_high_risk')},date:'reported'},{id:'travellers-with-declaration-this-month',type:'percent',icon:'icon-form-general',goal:100,translation_key:'targets.declaration.percent',subtitle_translation_key:'targets.this_month.subtitle',percentage_count_translation_key:'targets.traveller.percent',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:n,passesIf:function(t){return t.reports.some(t=>(t=>'declaration'===t.form)(t))},date:'reported'},{id:'travellers-with-quarantine-today',type:'count',icon:'icon-calendar',goal:0,translation_key:'targets.quarantine.count',subtitle_translation_key:'targets.today.subtitle',context:'user.role === \"inputter\"',appliesTo:'reports',appliesToType:['quarantine'],idType:'contact',appliesIf:function(t,e){return r(new Date(e.reported_date))},date:'reported'},{id:'travellers-with-quarantine-this-month',type:'percent',icon:'icon-calendar',goal:100,translation_key:'targets.quarantine.percent',subtitle_translation_key:'targets.this_month.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:n,passesIf:function(t){return t.reports.some(t=>(t=>'quarantine'===t.form)(t))},date:'reported'},{id:'travellers-with-locator-this-month',type:'percent',icon:'icon-service-rating',goal:100,translation_key:'targets.locator.percent',subtitle_translation_key:'targets.this_month.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:n,passesIf:function(t){return t.reports.some(t=>(t=>'locator'===t.form)(t))},date:'reported'},{id:'travellers-with-referral-today',type:'count',icon:'icon-hospital',goal:0,translation_key:'targets.referral.count',subtitle_translation_key:'targets.today.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:function(t){return n(t)&&t.reports.some(t=>r(new Date(t.reported_date))&&a(t))},date:'reported'},{id:'travellers-with-referral-this-month',type:'count',icon:'icon-hospital',goal:0,translation_key:'targets.referral.count',subtitle_translation_key:'targets.this_month.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:function(t){return n(t)&&t.reports.some(t=>a(t))},date:'reported'}]},function(t,e,o){var n=o(0);function r(t,e,o,n,r,a){var i;if(t.appliesToType){var s='contact'===r.contact.type?r.contact.contact_type:r.contact.type;if(!('contacts'===t.appliesTo?-1!==t.appliesToType.indexOf(s):a&&-1!==t.appliesToType.indexOf(a.form)))return}if('scheduled_tasks'===t.appliesTo||!t.appliesIf||t.appliesIf(r,a))if('scheduled_tasks'===t.appliesTo){if(a&&t.appliesIf){if(!a.scheduled_tasks)return;for(i=0;i<a.scheduled_tasks.length;i++)t.appliesIf(r,a,i)&&l(i)}}else l();function c(t,e,o){var n;return(n='function'==typeof t.contactLabel?t.contactLabel(e,o):t.contactLabel)?{name:n}:e.contact}function l(i){var s,l,d,u,f=null;for(s=0;s<t.events.length;s++){if((l=t.events[s]).dueDate)f=l.dueDate(l,r,a,i);else if(a)f=void 0!==i?new Date(e.addDate(new Date(a.scheduled_tasks[i].due),l.days)):new Date(e.addDate(new Date(a.reported_date),l.days));else if(l.dueDate)f=l.dueDate(l,r);else{var _=r.contact&&r.contact.reported_date?new Date(r.contact.reported_date):new Date;f=new Date(e.addDate(_,l.days))}e.isTimely(f,l)&&(u={_id:(a?a._id:r.contact&&r.contact._id)+'~'+(l.id||s)+'~'+t.name,deleted:!(!(r.contact&&r.contact.deleted||a)||!a.deleted),doc:r,contact:c(t,r,a),icon:t.icon,date:f,readyStart:l.start||0,readyEnd:l.end||0,title:t.title,resolved:t.resolvedIf(r,a,l,f,i),actions:t.actions.map(p)},void 0!==i&&(u._id+='-'+i),'function'==typeof(d=t.priority)&&(d=d(r,a)),d&&(u.priority=d.level,u.priorityLabel=d.label),n('task',new o(u)))}}function p(t){var e={source:'task',source_id:!!a?a._id:r.contact&&r.contact._id,contact:r.contact};return t.modifyContent&&t.modifyContent(e,r,a),{type:'report',form:t.form,label:t.label||'Follow up',content:e}}}t.exports=function(t,e,o,a,i){if(t)for(var s,c=0;c<t.length;++c)switch(s=t[c],n(s),s.appliesTo){case'reports':case'scheduled_tasks':for(var l=0;l<e.reports.length;++l)r(s,o,a,i,e,e.reports[l]);break;case'contacts':e.contact&&r(s,o,a,i,e);break;default:throw new Error('Unrecognised task.appliesTo: '+s.appliesTo)}}},function(t,e,o){var n=o(0);function r(t,e,o,n,r,a){var i=!!a;if(r.contact){var s=r.contact.contact_type||r.contact.type,c=i?a.form:s;if(!(t.appliesToType&&t.appliesToType.indexOf(c)<0)&&(!t.appliesIf||t.appliesIf(r,a)))for(var l=i?a:r.contact,p=function(t,e,o){var n;return n='function'==typeof t.idType?t.idType(e,o):'report'===t.idType?o&&o._id:e.contact&&e.contact._id,Array.isArray(n)||(n=[n]),n}(t,r,a),d=!t.passesIf||!!t.passesIf(r,a),u=function(t,e,o,n){if('function'==typeof t.date)return t.date(o,n);if(void 0===t.date||'now'===t.date)return e.now().getTime();if('reported'===t.date)return n?n.reported_date:o.contact.reported_date;throw new Error('Unrecognised value for target.date: '+t.date)}(t,o,r,a),f=t.groupBy&&t.groupBy(r,a),_=0;_<p.length;++_){var m=new e({_id:p[_]+'~'+t.id,contact:r.contact,deleted:!!l.deleted,type:t.id,pass:d,groupBy:f,date:u});t.emitCustom?t.emitCustom(y,m,r,a):y(m)}}function y(t){n('target',t)}}t.exports=function(t,e,o,a,i){for(var s=0;s<t.length;++s){var c=t[s];switch(n(c),c.appliesTo){case'contacts':r(c,a,o,i,e);break;case'reports':for(var l=0;l<e.reports.length;++l){r(c,a,o,i,e,e.reports[l])}break;default:throw new Error('Unrecognised target.appliesTo: '+c.appliesTo)}}}}]); }\n}",
    "targets": {
      "enabled": true,
      "items": [
        {
          "id": "travellers-registered-this-month",
          "type": "count",
          "translation_key": "targets.travellers.count",
          "icon": "icon-person",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "travellers-registered-today",
          "type": "count",
          "translation_key": "targets.travellers.count",
          "icon": "icon-person",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.today.subtitle"
        },
        {
          "id": "reports-with-risk-this-month",
          "type": "count",
          "translation_key": "targets.risk.count",
          "icon": "icon-risk",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "travellers-with-declaration-this-month",
          "type": "percent",
          "goal": 100,
          "translation_key": "targets.declaration.percent",
          "icon": "icon-form-general",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "travellers-with-quarantine-today",
          "type": "count",
          "translation_key": "targets.quarantine.count",
          "icon": "icon-calendar",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.today.subtitle"
        },
        {
          "id": "travellers-with-quarantine-this-month",
          "type": "percent",
          "goal": 100,
          "translation_key": "targets.quarantine.percent",
          "icon": "icon-calendar",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "travellers-with-locator-this-month",
          "type": "percent",
          "goal": 100,
          "translation_key": "targets.locator.percent",
          "icon": "icon-service-rating",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "travellers-with-referral-today",
          "type": "count",
          "translation_key": "targets.referral.count",
          "icon": "icon-hospital",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.today.subtitle"
        },
        {
          "id": "travellers-with-referral-this-month",
          "type": "count",
          "translation_key": "targets.referral.count",
          "icon": "icon-hospital",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        }
      ]
    }
  },
  "transitions": {
    "mark_for_outbound": true,
    "accept_patient_reports": false,
    "conditional_alerts": false,
    "default_responses": false,
    "update_sent_by": false,
    "registration": true,
    "update_clinics": true,
    "update_notifications": false,
    "update_scheduled_reports": false,
    "update_sent_forms": false,
    "generate_patient_id_on_people": true,
    "death_reporting": true
  },
  "outbound": {
    "textit-gateway": {
      "relevant_to": "doc.type === 'data_record' && doc.tasks && doc.tasks[0] && doc.tasks[0].state && doc.tasks[0].state === 'pending'",
      "destination": {
        "base_url": "https://textit.in",
        "auth": {
          "type": "header",
          "name": "Authorization",
          "value_key": "textit.in"
        },
        "path": "/api/v2/flow_starts.json"
      },
      "mapping": {
        "flow": {
          "expr": "'fad5ba19-381f-4940-a16d-10bc83c4954a'"
        },
        "urns": {
          "expr": "[ 'tel:' + doc.tasks[0].messages[0].to ]",
          "optional": false
        }
      }
    },
    "textit-self-quarantine": {
      "relevant_to": "doc.type === 'data_record' && doc.form === 'covid_trace_follow_up' && doc.fields.trace.symptom === 'no'",
      "destination": {
        "base_url": "https://textit.in",
        "auth": {
          "type": "header",
          "name": "Authorization",
          "value_key": "textit.in"
        },
        "path": "/api/v2/flow_starts.json"
      },
      "mapping": {
        "flow": {
          "expr": "'dde7bc93-6f21-44e3-bedf-365c6b879e68'"
        },
        "urns": {
          "expr": "[ 'tel:' + doc.fields.inputs.contact.phone ]",
          "optional": false
        },
        "extra.self_quarantine_enrollment": {
          "expr": "new Date(doc.reported_date).getDate()+'-'+ (new Date(doc.reported_date).getMonth()+1) +'-' + new Date(doc.reported_date).getFullYear()+ ' ' + new Date(doc.reported_date).getHours() + ':' +  new Date(doc.reported_date).getMinutes()",
          "optional": false
        },
        "extra.name": "doc.fields.inputs.contact.surname"
      }
    },
    "textit-save-tracers-contact": {
      "relevant_to": "doc.type === 'person' && doc.phone && doc.role ==='tracer'",
      "destination": {
        "base_url": "https://textit.in",
        "auth": {
          "type": "header",
          "name": "Authorization",
          "value_key": "textit.in"
        },
        "path": "/api/v2/flow_starts.json"
      },
      "mapping": {
        "flow": {
          "expr": "'0aee58f5-0cc8-4f9e-96f1-8f2e30cece3f'"
        },
        "urns": {
          "expr": "[ 'tel:' + doc.phone ]",
          "optional": false
        },
        "extra.patient._id": "doc._id",
        "extra.area": "doc.parent._id",
        "extra.patient._rev": "doc._rev",
        "extra.patient.name": "doc.name",
        "extra.patient.short_name": "doc.short_name",
        "extra.patient.date_of_birth": "doc.date_of_birth",
        "extra.patient.medic_id": "doc.patient_id",
        "extra.patient.phone": "doc.phone",
        "extra.chw._id": "doc.parent.parent.contact._id",
        "extra.chw.name": "doc.parent.parent.contact.name"
      }
    },
    "textit-tracer_assignement": {
      "relevant_to": "doc.type === 'person' && doc.role ==='contact_n'",
      "destination": {
        "base_url": "https://textit.in",
        "auth": {
          "type": "header",
          "name": "Authorization",
          "value_key": "textit.in"
        },
        "path": "/api/v2/flow_starts.json"
      },
      "mapping": {
        "flow": {
          "expr": "'72191007-3160-4dff-84a6-d36af491f609'"
        },
        "urns": {
          "expr": "[ 'ext:' + doc.parent._id ]",
          "optional": false
        },
        "extra.area": "doc.parent._id",
        "extra.patient_name": "doc.name"
      }
    },
    "textit-contact-notification": {
      "relevant_to": "doc.type === 'person' && doc.phone && doc.role ==='contact_n'",
      "destination": {
        "base_url": "https://textit.in",
        "auth": {
          "type": "header",
          "name": "Authorization",
          "value_key": "textit.in"
        },
        "path": "/api/v2/flow_starts.json"
      },
      "mapping": {
        "flow": {
          "expr": "'9969e04d-6520-4c97-9919-558d8c632361'"
        },
        "urns": {
          "expr": "[ 'tel:' + doc.phone ]",
          "optional": false
        },
        "extra.patient_name": "doc.name"
      }
    }
  },
  "forms": {
    "8": {
      "meta": {
        "code": "8",
        "translation_key": "form.8.title"
      },
      "fields": {},
      "public_form": false,
      "use_sentinel": true
    },
    "COVID_SYMPTOMS": {
      "meta": {
        "code": "COVID_SYMPTOMS",
        "icon": "icon-risk",
        "translation_key": "form.covid_symptoms.title"
      },
      "fields": {
        "patient_id": {
          "labels": {
            "short": {
              "translation_key": "patient_id"
            },
            "tiny": {
              "en": "ID"
            }
          },
          "position": 0,
          "flags": {
            "input_digits_only": true
          },
          "length": [
            5,
            13
          ],
          "type": "string",
          "required": true
        },
        "notes": {
          "labels": {
            "short": {
              "translation_key": "notes"
            },
            "tiny": {
              "en": "n"
            }
          },
          "position": 1,
          "length": [
            0,
            200
          ],
          "type": "string",
          "required": false
        }
      },
      "use_sentinel": true
    },
    "QUARANTINE_FOLLOW_UP": {
      "meta": {
        "code": "QUARANTINE_FOLLOW_UP",
        "icon": "icon-follow-up",
        "translation_key": "form.quarantine_follow_up.title"
      },
      "fields": {
        "patient_id": {
          "labels": {
            "short": {
              "translation_key": "patient_id"
            },
            "tiny": {
              "en": "ID"
            }
          },
          "position": 0,
          "flags": {
            "input_digits_only": true
          },
          "length": [
            5,
            13
          ],
          "type": "string",
          "required": true
        },
        "symptoms_check": {
          "labels": {
            "short": {
              "translation_key": "symptoms_check"
            },
            "tiny": {
              "en": "sym_check"
            }
          },
          "position": 1,
          "length": [
            0,
            2
          ],
          "type": "string",
          "required": false
        }
      },
      "use_sentinel": true
    }
  },
  "registrations": [
    {
      "form": "8",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "covid_signal_reminders_to_CHA",
          "bool_expr": ""
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.covid.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        },
        {
          "translation_key": "messages.covid.signal.notification",
          "event_type": "report_accepted",
          "recipient": "parent"
        }
      ]
    },
    {
      "form": "hbc_followup",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "self_reported_signal_reminders_to_CHA",
          "bool_expr": "doc.fields.signal_type && doc.fields.signal_type != '8'"
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "covid_self_reported_signal_reminders_to_CHA",
          "bool_expr": "doc.fields.signal_type && doc.fields.signal_type == '8'"
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.cha.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        }
      ]
    },
    {
      "form": "death_report",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "self_reported_signal_reminders_to_CHA",
          "bool_expr": "doc.fields.signal_type && doc.fields.signal_type != '8'"
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "covid_self_reported_signal_reminders_to_CHA",
          "bool_expr": "doc.fields.signal_type && doc.fields.signal_type == '8'"
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.cha.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        }
      ]
    },
    {
      "form": "undo_death_report",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "self_reported_signal_reminders_to_CHA",
          "bool_expr": "doc.fields.signal_type && doc.fields.signal_type != '8'"
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "covid_self_reported_signal_reminders_to_CHA",
          "bool_expr": "doc.fields.signal_type && doc.fields.signal_type == '8'"
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.cha.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        }
      ]
    },
    {
      "form": "outcome_report",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "self_reported_signal_reminders_to_CHA",
          "bool_expr": "doc.fields.signal_type && doc.fields.signal_type != '8'"
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "covid_self_reported_signal_reminders_to_CHA",
          "bool_expr": "doc.fields.signal_type && doc.fields.signal_type == '8'"
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.cha.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        }
      ]
    },
    {
      "form": "general_followup",
      "events": [
        {
          "name": "on_create",
          "trigger": "clear_schedule",
          "params": "signal_reminders_to_CHA",
          "bool_expr": ""
        },


        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_verification_notification_to_scdsc",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_verification_animal_notification_to_scdsc",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_reminders_to_scdsc",
          "bool_expr": ""
        }
      ],
      "validations": {
        "join_responses": true,
        "list": [
          {
            "property": "patient_id",
            "rule": "unique('form', 'patient_id')",
            "translation_key": "messages.signal.verification.validation.unique",
            "recipient": "reporting_unit"
          }
        ]
      },
      "messages": [
        {
          "translation_key": "messages.generic.registration_not_found",
          "event_type": "registration_not_found",
          "recipient": "reporting_unit"
        }
      ]
    },
    {
      "form": "form_a0",
      "events": [
        {
          "name": "on_create",
          "trigger": "clear_schedule",
          "params": "signal_reminders_to_scdsc",
          "bool_expr": ""
        }
      ],
      "validations": {
        "join_responses": true,
        "list": [
          {
            "property": "patient_id",
            "rule": "unique('form', 'patient_id')",
            "translation_key": "messages.signal.investigation.validation.unique"
          },
          {
            "property": "patient_id",
            "rule": "exists('CHA_SIGNAL_VERIFICATION', 'patient_id')",
            "translation_key": "messages.signal.investigation.validation.verification_exists"
          }
        ]
      },
      "messages": [
        {
          "translation_key": "messages.generic.registration_not_found",
          "event_type": "registration_not_found",
          "recipient": "reporting_unit"
        }
      ]
    }
  ],
  "schedules": [
    {
      "name": "signal_reminders_to_CHA",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "8 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "16 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "24 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.2",
          "group": 1,
          "offset": "24 hours",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "self_reported_signal_reminders_to_CHA",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "8 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "16 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "24 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.self.reported.reminders.2",
          "group": 1,
          "offset": "24 hours",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "signal_reminders_to_scdsc",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.signal.verification.reminders.1",
          "group": 2,
          "offset": "8 hours",
          "send_time": "",
          "recipient": "grandparent"
        },
        {
          "translation_key": "messages.signal.verification.reminders.1",
          "group": 2,
          "offset": "16 hours",
          "send_time": "",
          "recipient": "grandparent"
        },
        {
          "translation_key": "messages.signal.verification.reminders.1",
          "group": 2,
          "offset": "24 hours",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "signal_verification_notification_to_scdsc",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.signal.verification.notification",
          "group": 3,
          "offset": "30 seconds",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "signal_verification_animal_notification_to_scdsc",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.signal.verification.animal.notification",
          "group": 3,
          "offset": "30 seconds",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "covid_signal_reminders_to_CHA",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "4 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "8 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "12 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.covid.schedule.signal.reminders.2",
          "group": 1,
          "offset": "12 hours",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "covid_self_reported_signal_reminders_to_CHA",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "4 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "8 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "12 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.covid.schedule.signal.self.reported.reminders.2",
          "group": 1,
          "offset": "12 hours",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    }
  ],
  "sms": {
    "outgoing_service": "medic-gateway"
  }
}
